{"ast":null,"code":"var _jsxFileName = \"/home/jreyes/Desktop/ComedorOxxo/client/components/fileLoader/FileLoader.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useDropzone } from 'react-dropzone';\nimport { useCallback } from 'react';\n\nconst FileLoader = props => {\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    console.log(acceptedFiles);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return __jsx(\"div\", _extends({\n    className: \"drag-drop-files__ctn\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  })), isDragActive ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Drop the files here ...\") : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"));\n};\n\nexport default FileLoader;","map":{"version":3,"sources":["/home/jreyes/Desktop/ComedorOxxo/client/components/fileLoader/FileLoader.js"],"names":["useDropzone","useCallback","FileLoader","props","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","isDragActive"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,MAAM,GAAGH,WAAW,CAAEI,aAAD,IAAmB;AAC5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACD,GAHyB,EAGvB,EAHuB,CAA1B;AAIA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDV,WAAW,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAAjE;AAEA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CI,YAAY,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,4BAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEGC,YAAY,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADW,GAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALJ,CADF;AAUD,CAjBD;;AAmBA,eAAeR,UAAf","sourcesContent":["import { useDropzone } from 'react-dropzone';\nimport { useCallback } from 'react';\n\nconst FileLoader = (props) => {\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    console.log(acceptedFiles);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div className='drag-drop-files__ctn' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      )}\n    </div>\n  );\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}