{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout/Layout';\nimport FileLoader from '../components/fileLoader/FileLoader';\nimport Title from '../components/title/Title';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Toast from 'react-bootstrap/Toast';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nvar Actions = function Actions(props) {\n  var onCancel = props.onCancel,\n      onSuccess = props.onSuccess;\n  return __jsx(\"div\", {\n    className: \"actions__ctn\"\n  }, __jsx(Button, {\n    variant: \"outline-danger\",\n    onClick: onCancel\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: onSuccess\n  }, \"Guardar\"));\n};\n\nvar CargarArchivo = function CargarArchivo(props) {\n  var _useState = useState(null),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      success = _useState3[0],\n      setSuccess = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var saveFile = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var formdata, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formdata = new FormData();\n              formdata.append('csv', files);\n              setError(false);\n              setSuccess(false);\n              setLoading(true);\n              _context.prev = 5;\n              _context.next = 8;\n              return fetch('http://' + process.env.API_HOST + '/schedule', {\n                method: 'POST',\n                headers: {},\n                body: formdata\n              });\n\n            case 8:\n              response = _context.sent;\n              setSuccess(true);\n              setLoading(false);\n              setFiles(null);\n              toast.success('Archivo csv cargado correctamente');\n              _context.next = 20;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](5);\n              setError(true);\n              setLoading(false);\n              toast.error('Error al subir el archvio csv');\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 15]]);\n    }));\n\n    return function saveFile() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, null, __jsx(Title, null, \"Cargar archivo CSV\"), loading ? __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Cargando horarios...\")) : __jsx(FileLoader, {\n    files: files,\n    setFiles: setFiles\n  }), files ? __jsx(Actions, {\n    onCancel: function onCancel() {\n      setFiles([]);\n    },\n    onSuccess: saveFile\n  }) : null);\n};\n\nexport default CargarArchivo;","map":null,"metadata":{},"sourceType":"module"}