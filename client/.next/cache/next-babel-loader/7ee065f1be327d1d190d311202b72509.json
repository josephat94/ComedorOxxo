{"ast":null,"code":"var _jsxFileName = \"/home/jreyes/Desktop/ComedorOxxo/client/components/fileLoader/FileLoader.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useDropzone } from 'react-dropzone';\nimport { useCallback, useState } from 'react';\n\nconst FileLoader = props => {\n  const {\n    files,\n    setFiles\n  } = props;\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    setFiles(acceptedFiles[0]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return __jsx(\"div\", _extends({\n    className: \"drag-drop-files__ctn\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), files ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, files.name) : __jsx(React.Fragment, null, __jsx(\"input\", _extends({}, getInputProps(), {\n    accept: \".csv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })), isDragActive ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Suelta el archivo para cargarlo....\") : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Arrastra un archivo csv or da click aqui\")));\n};\n\nexport default FileLoader;","map":{"version":3,"sources":["/home/jreyes/Desktop/ComedorOxxo/client/components/fileLoader/FileLoader.js"],"names":["useDropzone","useCallback","useState","FileLoader","props","files","setFiles","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","name"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,KAA5B;AACA,QAAMG,MAAM,GAAGN,WAAW,CAAEO,aAAD,IAAmB;AAC5C;AACAF,IAAAA,QAAQ,CAACE,aAAa,CAAC,CAAD,CAAd,CAAR;AACD,GAHyB,EAGvB,EAHuB,CAA1B;AAIA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDX,WAAW,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAjE;AACA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CE,YAAY,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,KAAK,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACO,IAAV,CADI,GAGJ,4BACE,4BAAWF,aAAa,EAAxB;AAA4B,IAAA,MAAM,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEGC,YAAY,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADW,GAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDALJ,CAJJ,CADF;AAgBD,CAvBD;;AAyBA,eAAeR,UAAf","sourcesContent":["import { useDropzone } from 'react-dropzone';\nimport { useCallback, useState } from 'react';\n\nconst FileLoader = (props) => {\n  const { files, setFiles } = props;\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    setFiles(acceptedFiles[0]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n  return (\n    <div className='drag-drop-files__ctn' {...getRootProps()}>\n      {files ? (\n        <p>{files.name}</p>\n      ) : (\n        <>\n          <input {...getInputProps()} accept='.csv' />\n          {isDragActive ? (\n            <p>Suelta el archivo para cargarlo....</p>\n          ) : (\n            <p>Arrastra un archivo csv or da click aqui</p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}