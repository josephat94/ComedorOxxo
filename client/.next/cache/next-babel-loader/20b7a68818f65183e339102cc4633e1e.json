{"ast":null,"code":"var _jsxFileName = \"/home/jreyes/Desktop/ComedorOxxo/client/pages/CargarArchivo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout/Layout';\nimport FileLoader from '../components/fileLoader/FileLoader';\nimport Title from '../components/title/Title';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Toast from 'react-bootstrap/Toast';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst Actions = props => {\n  const {\n    onCancel,\n    onSuccess\n  } = props;\n  return __jsx(\"div\", {\n    className: \"actions__ctn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variant: \"outline-danger\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: onSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Guardar\"));\n};\n\nconst CargarArchivo = props => {\n  const {\n    0: files,\n    1: setFiles\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const saveFile = async () => {\n    const formdata = new FormData();\n    formdata.append('csv', files);\n    setError(false);\n    setSuccess(false);\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://' + process.env.API_HOST + '/schedule', {\n        method: 'POST',\n        headers: {},\n        body: formdata\n      });\n      setSuccess(true);\n      setLoading(false);\n      setFiles(null);\n\n      const notify = () => toast('Wow so easy !');\n    } catch (error) {\n      setError(true);\n      setLoading(false);\n\n      const notify = () => toast('Wow so easy !');\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Cargar archivo CSV\"), loading && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Cargando horarios...\")), __jsx(FileLoader, {\n    files: files,\n    setFiles: setFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), files ? __jsx(Actions, {\n    onCancel: () => {\n      setFiles([]);\n    },\n    onSuccess: saveFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default CargarArchivo;","map":{"version":3,"sources":["/home/jreyes/Desktop/ComedorOxxo/client/pages/CargarArchivo.js"],"names":["Layout","FileLoader","Title","useState","Button","Alert","Toast","Spinner","axios","toast","Actions","props","onCancel","onSuccess","CargarArchivo","files","setFiles","error","setError","success","setSuccess","loading","setLoading","saveFile","formdata","FormData","append","response","fetch","process","env","API_HOST","method","headers","body","notify"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BF,KAAhC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,gBAAhB;AAAiC,IAAA,OAAO,EAAEC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;AAUD,CAZD;;AAcA,MAAMC,aAAa,GAAIH,KAAD,IAAW;AAC/B,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACc,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACgB,OAAD;AAAA,OAAUC;AAAV,MAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACkB,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMoB,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBX,KAAvB;AACAG,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,YAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB,GAAmC,WADT,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE,EAFX;AAGEC,QAAAA,IAAI,EAAEV;AAHR,OAF0B,CAA5B;AAQAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,YAAMmB,MAAM,GAAG,MAAM1B,KAAK,CAAC,eAAD,CAA1B;AACD,KAbD,CAaE,OAAOQ,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,YAAMa,MAAM,GAAG,MAAM1B,KAAK,CAAC,eAAD,CAA1B;AACD;AACF,GAxBD;;AAyBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGGY,OAAO,IACN,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAJJ,EAQE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEN,KAAnB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASGD,KAAK,GACJ,MAAC,OAAD;AACE,IAAA,QAAQ,EAAE,MAAM;AACdC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAHH;AAIE,IAAA,SAAS,EAAEO,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAOF,IAhBN,CADF;AAoBD,CAnDD;;AAqDA,eAAeT,aAAf","sourcesContent":["import Layout from '../components/layout/Layout';\nimport FileLoader from '../components/fileLoader/FileLoader';\nimport Title from '../components/title/Title';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Toast from 'react-bootstrap/Toast';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\n\nimport { toast } from 'react-toastify';\nconst Actions = (props) => {\n  const { onCancel, onSuccess } = props;\n  return (\n    <div className='actions__ctn'>\n      <Button variant='outline-danger' onClick={onCancel}>\n        Cancelar\n      </Button>\n      <Button variant='outline-secondary' onClick={onSuccess}>\n        Guardar\n      </Button>\n    </div>\n  );\n};\n\nconst CargarArchivo = (props) => {\n  const [files, setFiles] = useState(null);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const saveFile = async () => {\n    const formdata = new FormData();\n    formdata.append('csv', files);\n    setError(false);\n    setSuccess(false);\n    setLoading(true);\n    try {\n      const response = await fetch(\n        'http://' + process.env.API_HOST + '/schedule',\n        {\n          method: 'POST',\n          headers: {},\n          body: formdata,\n        }\n      );\n      setSuccess(true);\n      setLoading(false);\n      setFiles(null);\n      const notify = () => toast('Wow so easy !');\n    } catch (error) {\n      setError(true);\n      setLoading(false);\n      const notify = () => toast('Wow so easy !');\n    }\n  };\n  return (\n    <Layout>\n      <Title>Cargar archivo CSV</Title>\n\n      {loading && (\n        <Spinner animation='border' role='status'>\n          <span className='sr-only'>Cargando horarios...</span>\n        </Spinner>\n      )}\n      <FileLoader files={files} setFiles={setFiles}></FileLoader>\n      {files ? (\n        <Actions\n          onCancel={() => {\n            setFiles([]);\n          }}\n          onSuccess={saveFile}\n        ></Actions>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default CargarArchivo;\n"]},"metadata":{},"sourceType":"module"}