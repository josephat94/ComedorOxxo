{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport TableData from '../components/table/TableData';\nimport Title from '../components/title/Title';\nimport Layout from '../components/layout/Layout';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\n\nvar Index = function Index(props) {\n  var _useState = useState(null),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(null),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var headers = ['Nombre', 'Tipo de Alimento', 'Hora', 'Ubicaci√≥n'];\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get('http://' + process.env.API_HOST + '/schedule');\n\n            case 4:\n              resp = _context.sent;\n              setData(resp.data.schedule);\n              setLoading(false);\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setLoading(false);\n              setError('No hay datos para mostrar, agrega un archivo .csv ');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }))();\n  }, []);\n  return __jsx(Layout, null, __jsx(\"div\", null, __jsx(Title, null, \"Horarios de Comedor \"), error && __jsx(\"h4\", null, error), loading && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Cargando horarios...\")), data && __jsx(TableData, {\n    data: data,\n    headers: headers\n  })));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}