{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jreyes/Desktop/ComedorOxxo/client/pages/CargarArchivo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout/Layout';\nimport FileLoader from '../components/fileLoader/FileLoader';\nimport Title from '../components/title/Title';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nvar Actions = function Actions(props) {\n  var onCancel = props.onCancel,\n      onSuccess = props.onSuccess;\n  return __jsx(\"div\", {\n    className: \"actions__ctn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variant: \"outline-danger\",\n    onClick: onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: onSuccess,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Guardar\"));\n};\n\n_c = Actions;\n\nvar CargarArchivo = function CargarArchivo(props) {\n  _s();\n\n  var _useState = useState(null),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var saveFile = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var formdata, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formdata = new FormData();\n              formdata.append('csv', files);\n              _context.next = 4;\n              return fetch('http://' + process.env.API_HOST + '/schedule', {\n                method: 'POST',\n                headers: {},\n                body: formdata\n              });\n\n            case 4:\n              response = _context.sent;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function saveFile() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Cargar archivo CSV\"), __jsx(FileLoader, {\n    files: files,\n    setFiles: setFiles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), files ? __jsx(Actions, {\n    onCancel: function onCancel() {\n      setFiles([]);\n    },\n    onSuccess: saveFile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\n_s(CargarArchivo, \"YJpv4A0FOkRyjQ8lS7jcshue0Lg=\");\n\n_c2 = CargarArchivo;\nexport default CargarArchivo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Actions\");\n$RefreshReg$(_c2, \"CargarArchivo\");","map":{"version":3,"sources":["/home/jreyes/Desktop/ComedorOxxo/client/pages/CargarArchivo.js"],"names":["Layout","FileLoader","Title","useState","Button","axios","Actions","props","onCancel","onSuccess","CargarArchivo","files","setFiles","saveFile","formdata","FormData","append","fetch","process","env","API_HOST","method","headers","body","response"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MACjBC,QADiB,GACOD,KADP,CACjBC,QADiB;AAAA,MACPC,SADO,GACOF,KADP,CACPE,SADO;AAEzB,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,gBAAhB;AAAiC,IAAA,OAAO,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;AAUD,CAZD;;KAAMH,O;;AAcN,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACH,KAAD,EAAW;AAAA;;AAAA,kBACLJ,QAAQ,CAAC,IAAD,CADH;AAAA,MACxBQ,KADwB;AAAA,MACjBC,QADiB;;AAG/B,MAAMC,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,QADS,GACE,IAAIC,QAAJ,EADF;AAEfD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBL,KAAvB;AAFe;AAAA,qBAIQM,KAAK,CAC1B,YAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB,GAAmC,WADT,EAE1B;AACEC,gBAAAA,MAAM,EAAE,MADV;AAEEC,gBAAAA,OAAO,EAAE,EAFX;AAGEC,gBAAAA,IAAI,EAAET;AAHR,eAF0B,CAJb;;AAAA;AAITU,cAAAA,QAJS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARX,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAaA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,KAAnB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIGD,KAAK,GACJ,MAAC,OAAD;AACE,IAAA,QAAQ,EAAE,oBAAM;AACdC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAHH;AAIE,IAAA,SAAS,EAAEC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAOF,IAXN,CADF;AAeD,CA/BD;;GAAMH,a;;MAAAA,a;AAiCN,eAAeA,aAAf","sourcesContent":["import Layout from '../components/layout/Layout';\nimport FileLoader from '../components/fileLoader/FileLoader';\nimport Title from '../components/title/Title';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nconst Actions = (props) => {\n  const { onCancel, onSuccess } = props;\n  return (\n    <div className='actions__ctn'>\n      <Button variant='outline-danger' onClick={onCancel}>\n        Cancelar\n      </Button>\n      <Button variant='outline-secondary' onClick={onSuccess}>\n        Guardar\n      </Button>\n    </div>\n  );\n};\n\nconst CargarArchivo = (props) => {\n  const [files, setFiles] = useState(null);\n\n  const saveFile = async () => {\n    const formdata = new FormData();\n    formdata.append('csv', files);\n\n    const response = await fetch(\n      'http://' + process.env.API_HOST + '/schedule',\n      {\n        method: 'POST',\n        headers: {},\n        body: formdata,\n      }\n    );\n  };\n  return (\n    <Layout>\n      <Title>Cargar archivo CSV</Title>\n      <FileLoader files={files} setFiles={setFiles}></FileLoader>\n\n      {files ? (\n        <Actions\n          onCancel={() => {\n            setFiles([]);\n          }}\n          onSuccess={saveFile}\n        ></Actions>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default CargarArchivo;\n"]},"metadata":{},"sourceType":"module"}