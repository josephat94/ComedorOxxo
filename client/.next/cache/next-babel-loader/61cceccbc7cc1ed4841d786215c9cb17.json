{"ast":null,"code":"var _jsxFileName = \"/home/jreyes/Desktop/ComedorOxxo/client/pages/CargarArchivo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout/Layout';\nimport FileLoader from '../components/fileLoader/FileLoader';\nimport Title from '../components/title/Title';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\n\nconst Actions = props => {\n  const {\n    onCancel,\n    onSuccess\n  } = props;\n  return __jsx(\"div\", {\n    className: \"actions__ctn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variant: \"outline-danger\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: onSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Guardar\"));\n};\n\nconst CargarArchivo = props => {\n  const {\n    0: files,\n    1: setFiles\n  } = useState(null);\n\n  const saveFile = async () => {\n    const formdata = new FormData();\n    const {\n      0: error,\n      1: setError\n    } = useState(null);\n    const {\n      0: success,\n      1: setData\n    } = useState(false);\n    const {\n      0: loading,\n      1: setLoading\n    } = useState(false);\n    formdata.append('csv', files);\n    const response = await fetch('http://' + process.env.API_HOST + '/schedule', {\n      method: 'POST',\n      headers: {},\n      body: formdata\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Cargar archivo CSV\"), __jsx(FileLoader, {\n    files: files,\n    setFiles: setFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), error && __jsx(Alert, {\n    key: 'idx',\n    variant: 'danger',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Error al agregar el archivo\"), success && __jsx(Alert, {\n    key: 'idx',\n    variant: 'success',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Archivo agregado correctamente\"), loading && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Cargando horarios...\")), files ? __jsx(Actions, {\n    onCancel: () => {\n      setFiles([]);\n    },\n    onSuccess: saveFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default CargarArchivo;","map":{"version":3,"sources":["/home/jreyes/Desktop/ComedorOxxo/client/pages/CargarArchivo.js"],"names":["Layout","FileLoader","Title","useState","Button","Alert","Spinner","axios","Actions","props","onCancel","onSuccess","CargarArchivo","files","setFiles","saveFile","formdata","FormData","error","setError","success","setData","loading","setLoading","append","response","fetch","process","env","API_HOST","method","headers","body"],"mappings":"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","sourcesContent":["import Layout from '../components/layout/Layout';\nimport FileLoader from '../components/fileLoader/FileLoader';\nimport Title from '../components/title/Title';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nconst Actions = (props) => {\n  const { onCancel, onSuccess } = props;\n  return (\n    <div className='actions__ctn'>\n      <Button variant='outline-danger' onClick={onCancel}>\n        Cancelar\n      </Button>\n      <Button variant='outline-secondary' onClick={onSuccess}>\n        Guardar\n      </Button>\n    </div>\n  );\n};\n\nconst CargarArchivo = (props) => {\n  const [files, setFiles] = useState(null);\n\n  const saveFile = async () => {\n    const formdata = new FormData();\n    const [error, setError] = useState(null);\n    const [success, setData] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    formdata.append('csv', files);\n\n    const response = await fetch(\n      'http://' + process.env.API_HOST + '/schedule',\n      {\n        method: 'POST',\n        headers: {},\n        body: formdata,\n      }\n    );\n  };\n  return (\n    <Layout>\n      <Title>Cargar archivo CSV</Title>\n      <FileLoader files={files} setFiles={setFiles}></FileLoader>\n      {error && (\n        <Alert key={'idx'} variant={'danger'}>\n          Error al agregar el archivo\n        </Alert>\n      )}\n      {success && (\n        <Alert key={'idx'} variant={'success'}>\n          Archivo agregado correctamente\n        </Alert>\n      )}\n      {loading && (\n        <Spinner animation='border' role='status'>\n          <span className='sr-only'>Cargando horarios...</span>\n        </Spinner>\n      )}\n      {files ? (\n        <Actions\n          onCancel={() => {\n            setFiles([]);\n          }}\n          onSuccess={saveFile}\n        ></Actions>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default CargarArchivo;\n"]},"metadata":{},"sourceType":"module"}